Codebase Analysis for: .

Directory Structure:
└── .
    ├── .env
    ├── md
    │   ├── index.md
    │   └── test.md
    ├── package.json
    ├── public
    │   ├── index.html
    │   └── test.html
    ├── src
    │   ├── dev.ts
    │   └── prod.ts
    └── tsconfig.json

Summary:
Total files analyzed: 9
Total directories analyzed: 3
Estimated output size: 33.96 KB
Actual analyzed size: 32.10 KB
Total tokens: 10334
Actual text content size: 31.46 KB

File Contents:

==================================================
File: .\.env
==================================================
NODE_TLS_REJECT_UNAUTHORIZED=0

==================================================
File: .\md\index.md
==================================================


==================================================
File: .\md\test.md
==================================================


==================================================
File: .\package.json
==================================================
{
  "name": "md-localify",
  "version": "1.0.0",
  "description": "",
  "main": "index.ts",
  "scripts": {
    "build": "tsc -p ./tsconfig.json",
    "build:2": "esbuild ./src/prod.ts --bundle --minify --platform=node --outfile=./dist/bundle.js --format=esm --tsconfig=./tsconfig.json",
    "start": "node ./dist/bundle.js",
    "dev": "tsx --env-file=.env ./src/dev.ts",
    "dev:core": "tsx watch --env-file=.env --include=\"./*\" ./src/index.ts dev"
  },
  "keywords": [],
  "author": "",
  "license": "ISC",
  "type": "module",
  "devDependencies": {
    "@types/compression": "^1.8.1",
    "@types/express": "^5.0.5",
    "@types/helmet": "^4.0.0",
    "@types/imagemin": "^9.0.1",
    "@types/imagemin-gifsicle": "^7.0.4",
    "@types/imagemin-mozjpeg": "^8.0.4",
    "@types/imagemin-pngquant": "^8.0.0",
    "@types/imagemin-svgo": "^11.0.0",
    "@types/marked": "^6.0.0",
    "@types/node": "^24.9.2",
    "@types/sanitize-html": "^2.16.0",
    "esbuild": "^0.25.11",
    "eslint": "^9.38.0",
    "prettier": "^3.6.2",
    "ts-node": "^10.9.2",
    "tsx": "^4.20.6",
    "typescript": "^5.9.3"
  },
  "dependencies": {
    "compression": "^1.8.1",
    "express": "^5.1.0",
    "helmet": "^8.1.0",
    "imagemin": "^9.0.1",
    "imagemin-gifsicle": "^7.0.0",
    "imagemin-mozjpeg": "^10.0.0",
    "imagemin-pngquant": "^10.0.0",
    "imagemin-svgo": "^11.0.1",
    "marked": "^16.4.1"
  }
}


==================================================
File: .\public\index.html
==================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Home</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; line-height: 1.6; margin: 0; color: #333; }
        .container { display: flex; min-height: 100vh; }
        .sidebar { width: 220px; min-width: 220px; border-right: 1px solid #e0e0e0; padding: 2em; background-color: #f9f9f9; }
        .sidebar h2 { font-size: 1.1em; margin-top: 0; margin-bottom: 1em; color: #555; text-transform: uppercase; letter-spacing: 0.5px; }
        .sidebar ul { list-style: none; padding: 0; margin: 0; }
        .sidebar ul ul { padding-left: 1em; border-left: 1px solid #eee; margin-left: 0.2em; margin-top: 0.5em;}
        .sidebar li { margin-bottom: 0.5em; }
        .sidebar a { color: #333; text-decoration: none; display: block; padding: 0.2em 0; border-radius: 4px; transition: background-color 0.2s, color 0.2s; }
        .sidebar a:hover { color: #007bff; }
        .sidebar a.active { font-weight: bold; color: #007bff; }
        main { flex-grow: 1; padding: 2em 3em; max-width: 800px; }
        main img { max-width: 100%; height: auto; border-radius: 4px; }
        h1, h2, h3 { line-height: 1.2; }
        pre { background: #f4f4f4; padding: 1em; border-radius: 5px; overflow-x: auto; border: 1px solid #ddd; }
        code { font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
        p { margin-bottom: 1em; }
    </style>
</head>
<body>
    <div class="container">
        <aside class="sidebar">
            <h2>Navigation</h2>
            <ul><li><a href="/index.html" class="active">Home</a></li><li><a href="/test.html" class="">Test</a></li></ul>
        </aside>
        <main>
<h3><strong>Soal 1</strong></h3>
<p><img loading="lazy" decoding="async" src="/32924_a8edfab2768b756ccdf1fb08bf2d391b.png" alt="Soal 1" /></p>
<p>A. 9<br />B. 8<br />C. 5<br />D. -8<br />E. -20</p>
<h2>B. 8</h2>
<h3><strong>Soal 2</strong></h3>
<p><img loading="lazy" decoding="async" src="/87832_240a84ccfa4914a66d187e09b0d8f20c.png" alt="Soal 2" /></p>
<p>A. <img loading="lazy" decoding="async" src="/87832_6a864f531085bd8de454511f224ccbc5.png" alt="Opsi A" /><br />B. <img loading="lazy" decoding="async" src="/87832_a545e591ab76f56357a52aab0bf894c8.png" alt="Opsi B" /><br />C. <img loading="lazy" decoding="async" src="/87832_5c9354a99c20dfe7863822bd3f491ad0.png" alt="Opsi C" /><br />D. <img loading="lazy" decoding="async" src="/87832_cafb4e1c0e38a97e09063408adf0725b.png" alt="Opsi D" /><br />E. <img loading="lazy" decoding="async" src="/87832_10c6936d1c2b080400060fa300d6d0ba.png" alt="Opsi E" /></p>
<hr />
<h3><strong>Soal 3</strong></h3>
<p><img loading="lazy" decoding="async" src="/88143_d3db8e09f0e5fafa82adae844028eb99.png" alt="Soal 3" /></p>
<p>A. 5<br />B. 1<br />C. -1<br />D. -4<br />E. -7</p>
<hr />
<h3><strong>Soal 4</strong></h3>
<p>Diketahui fungsi trigonometri <em>f</em>(<em>x</em>) = –3 sin (2x – 30<sup>O</sup>) + 4. Periode fungsi <em>f</em>(<em>x</em>) adalah ....</p>
<p>A. 90°<br />B. 120°<br />C. 150°<br />D. 180°<br />E. 720°</p>
<hr />
<h3><strong>Soal 5</strong></h3>
<p>Di bawah ini yang merupakan grafik fungsi <img loading="lazy" decoding="async" src="/78190_1615899666fef932dbf6bd3f6eff745d.png" alt="Fungsi" /> adalah ....</p>
<p>A. <img loading="lazy" decoding="async" src="/78190_c970a6dfdf7222b64bda620c8955444b.png" alt="Grafik A" /><br />B. <img loading="lazy" decoding="async" src="/78190_d6bcdcda605b823ea3e2bb59794ff8b0.png" alt="Grafik B" /><br />C. <img loading="lazy" decoding="async" src="/78190_98bf748b4e43770feefa2a9798b57cd6.png" alt="Grafik C" /><br />D. <img loading="lazy" decoding="async" src="/78190_00afee7c7d6bb625e40b91f5ed0197d7.png" alt="Grafik D" /><br />E. <img loading="lazy" decoding="async" src="/78190_ae9e80dc0920be0b817d8b12d5797ee7.png" alt="Grafik E" /></p>
<hr />
<h3><strong>Soal 6</strong></h3>
<p>Suatu perahu akan menyeberangi sungai selebar 50 meter dari titik A di pinggir sungai. Kecepatan arus sungai 10 meter/menit sejajar dengan pinggiran sungai dengan arah ke hulu dan kecepatan perahu 20 meter/menit dengan arah tegak lurus dengan arah arus sungai. Jika B berada di seberang sungai dan berjarak terdekat dengan posisi A, jarak titik perahu pada saat sampai di seberang sungai dan titik B adalah … meter.</p>
<p>A. 10<br />B. 15<br />C. 20<br />D. 25<br />E. 30</p>
<hr />
<h3><strong>Soal 7</strong></h3>
<p>Diketahui persamaan lingkaran <img loading="lazy" decoding="async" src="/50116_4d55d153907bc5f62bdafe56997a7425.png" alt="Persamaan Lingkaran" />. Di antara lima pernyataan berikut, tentukan pernyataan yang benar! Jawaban benar lebih dari satu.</p>
<ul>
<li> Lingkaran tersebut berpusat di (1, 3).</li>
<li> Panjang jari-jari lingkaran tersebut 6 satuan panjang.</li>
<li> Jarak pusat lingkaran dengan sumbu-<img loading="lazy" decoding="async" src="/50116_8942e852504e3643bf634c418ea22ebe.png" alt="x" /> adalah 3.</li>
<li> Jarak pusat lingkaran dengan sumbu-<img loading="lazy" decoding="async" src="/50116_7fbe517896aa2e51c67df243ebd68d81.png" alt="y" /> adalah 1.</li>
<li> Garis <img loading="lazy" decoding="async" src="/50116_5dc73fa0297f3ef8f9d331c1cd477a40.png" alt="y=0" /> memotong lingkaran di dua titik.</li>
</ul>
<hr />
<h3><strong>Soal 8</strong></h3>
<p>Bayangan dari kurva <em>y</em> = 2<em>x</em><sup>2</sup> – 5 yang ditranslasikan oleh matriks <img loading="lazy" decoding="async" src="/18801_316eb45b673d91fa5bb14eb953e1d6de.png" alt="Matriks Translasi" /> kemudian didilatasikan oleh (O, 2) dengan O merupakan titik koordinat (0,0) adalah .…</p>
<p>A. <img loading="lazy" decoding="async" src="/18801_f7a55d4cc8ee45dd8c2cc29e4e7e444e.png" alt="Opsi A" /><br />B. <img loading="lazy" decoding="async" src="/18801_b9892de457685e65b576cc43426c7f15.png" alt="Opsi B" /><br />C. <img loading="lazy" decoding="async" src="/18801_fc916951809456d6cf1b6da2aee2d7af.png" alt="Opsi C" /><br />D. <img loading="lazy" decoding="async" src="/18801_96c3ac12665cdf2317cca26a18dda9f9.png" alt="Opsi D" /><br />E. <img loading="lazy" decoding="async" src="/18801_0599cec04e1352f3cc8cae08c25e4b11.png" alt="Opsi E" /></p>
<hr />
<h3><strong>Soal 9</strong></h3>
<p><img loading="lazy" decoding="async" src="/29890_10c8f7643de04a60b368681f2d869b8e.png" alt="Soal 9" /></p>
<p>A. -18<br />B. -9<br />C. 0<br />D. 9<br />E. 18</p>
<hr />
<h3><strong>Soal 10</strong></h3>
<p><img loading="lazy" decoding="async" src="/81866_8980b5c8c1cfa85ea5888beb34b8b949.png" alt="Soal 10" /></p>
<p>A. <img loading="lazy" decoding="async" src="/81866_b7eb885351d20bef12c3ddb7f5b0cf00.png" alt="Opsi A" /><br />B. -2<br />C. 0<br />D. 2<br />E. <img loading="lazy" decoding="async" src="/81866_02bd2b3b3eb196816e5736d3e1a2e06c.png" alt="Opsi E" /></p>
<hr />
<h3><strong>Soal 11</strong></h3>
<p><img loading="lazy" decoding="async" src="/90514_7fb2007b8eeb6bf88d49968d0b3c468d.png" alt="Soal 11" /></p>
<p>Pilih semua jawaban benar! Jawaban benar lebih dari satu.</p>
<ul>
<li> p = 2 dan q =1</li>
<li> p = 3 dan q = 3</li>
<li> p = 4 dan q = 2</li>
<li> p = 5 dan q = 1</li>
<li> p = 6 dan q = 3</li>
</ul>
<hr />
<h3><strong>Soal 12</strong></h3>
<p>Seorang murid memperkirakan banyaknya penonton suatu video dalam ribuan yang dibuat oleh <em>content creator</em> A di media sosial mengikuti model <img loading="lazy" decoding="async" src="/64319_0ab438bf4a4fbf6db4247ceff39387f8.png" alt="Model" /> dengan t adalah banyaknya hari sejak video diunggah.</p>
<p>Tentukan Benar atau Salah untuk setiap pernyataan berikut!</p>
<p><strong>Pernyataan 1:</strong> Video tersebut hanya ditonton oleh 3.000 penonton setelah tepat 24 jam diunggah.</p>
<ul>
<li>Benar</li>
<li>Salah</li>
</ul>
<p><strong>Pernyataan 2:</strong> Banyaknya penonton video meningkat dua kali lipat dari hari sebelumnya untuk beberapa hari setelah diunggah.</p>
<ul>
<li>Benar</li>
<li>Salah</li>
</ul>
<p><strong>Pernyataan 3:</strong> Model banyaknya penonton ini tidak tepat untuk waktu yang cukup besar.</p>
<ul>
<li>Benar</li>
<li>Salah</li>
</ul>
<hr />
<h3><strong>Soal 13</strong></h3>
<p>Diketahui 𝒖,𝒗 dan 𝒘 merupakan tiga vektor dengan 𝒖 = (1,1,−1),𝒗 = (1, 𝑣1, 2) dan 𝒘 = (0,𝑤1,𝑤2). Berapakah nilai 𝑣1 dan 𝑤1 yang mungkin sehingga memenuhi 𝒘 = 𝒖−𝒗?</p>
<p>Pilih semua jawaban benar! Jawaban benar lebih dari satu.</p>
<ul>
<li> 𝑣1=0 dan 𝑤1 =1.</li>
<li> 𝑣1=1 dan 𝑤1 =0.</li>
<li> 𝑣1=1 dan 𝑤1 =2.</li>
<li> 𝑣1=2 dan 𝑤1 =−1.</li>
<li> 𝑣1=2 dan 𝑤1 =2.</li>
</ul>
<hr />
<h3><strong>Soal 14</strong></h3>
<p>Segitiga PQR dengan titik P (-1,3), Q (3,3), dan R(1,-2) didilatasi dengan pusat titik (0,0) dan faktor skala 3. Luas segitiga tersebut setelah dilakukan dilatasi adalah … satuan luas.</p>
<p>A. 10<br />B. 30<br />C. 90<br />D. 120<br />E. 180</p>
<hr />
<h3><strong>Soal 15</strong></h3>
<p><img loading="lazy" decoding="async" src="/74488_4cca73046257d115983291003ce9234a.png" alt="Soal 15" /></p>
<p>Tentukan Benar atau Salah untuk setiap pernyataan berikut!</p>
<p><strong>Pernyataan 1:</strong> <img loading="lazy" decoding="async" src="/74488_55ead82de5969a740624960452601d26.png" alt="Pernyataan 1" /></p>
<ul>
<li>Benar</li>
<li>Salah</li>
</ul>
<p><strong>Pernyataan 2:</strong> <img loading="lazy" decoding="async" src="/74488_cfd2fe568286264e9e5bb49b949d72a4.png" alt="Pernyataan 2" /></p>
<ul>
<li>Benar</li>
<li>Salah</li>
</ul>
<p><strong>Pernyataan 3:</strong> <img loading="lazy" decoding="async" src="/74488_eb77a796ba6f394a46d42d8a15913109.png" alt="Pernyataan 3" />- Benar</p>
<ul>
<li>Salah</li>
</ul>
<hr />
<h3><strong>Soal 16</strong></h3>
<p><img loading="lazy" decoding="async" src="/24668_1464cced0b69c451376e3647ba4db8a4.png" alt="Soal 16" /></p>
<p>A. <img loading="lazy" decoding="async" src="/93581_8f7b393ba022bf0055d6a030cb9f19cc.png" alt="Opsi A" /><br />B. 0<br />C. <img loading="lazy" decoding="async" src="/24668_9b3280646126e7f2cdf9bf19aca17e7a.png" alt="Opsi C" /><br />D. 1<br />E. 3</p>
<hr />
<h3><strong>Soal 17</strong></h3>
<p><img loading="lazy" decoding="async" src="/36997_ec4151abe3c365046e9892ce30488ec3.png" alt="Soal 17" /></p>
<ul>
<li> (1, 2, 2, 3, 2, 3)</li>
<li> (2, 2, 3, 3, 3, 3)</li>
<li> (2, 3, 3, 3, 2, 2)</li>
<li> (2, 3, 3, 3, 2, 3)</li>
<li> (2, 3, 3, 4, 2, 4)</li>
</ul>
<hr />
<h3><strong>Soal 18</strong></h3>
<p><img loading="lazy" decoding="async" src="/31162_17fa35b4a4e3694000eb57b171a38456.png" alt="Soal 18" /></p>
<p>Berdasarkan informasi tersebut, pilihlah semua pernyataan berikut yang benar. Jawaban benar lebih dari satu!</p>
<ul>
<li> <img loading="lazy" decoding="async" src="/50734_4361daf0d9c9e3d6ba855185f805878e.png" alt="Opsi A" /></li>
<li> <img loading="lazy" decoding="async" src="/50734_84a0bcc0d18d9a1df13f5f9958733648.png" alt="Opsi B" /></li>
<li> <img loading="lazy" decoding="async" src="/50734_d47562c2444b2edcff31b2c77942f46d.png" alt="Opsi C" /></li>
<li> <img loading="lazy" decoding="async" src="/50734_4df6e784cea9fdd57e37541397d1cdff.png" alt="Opsi D" /></li>
<li> <img loading="lazy" decoding="async" src="/50734_3c5b4c5239fcfb0e26fe8b364b5b1f86.png" alt="Opsi E" /></li>
</ul>
<hr />
<h3><strong>Soal 19</strong></h3>
<p><img loading="lazy" decoding="async" src="/14291_8e0230cc6ed3986c851ae85246fb2070.png" alt="Soal 19" /></p>
<p>A. 16<br />B. 32<br />C. 36<br />D. 42<br />E. 61</p>
<hr />
<h3><strong>Soal 20</strong></h3>
<p><img loading="lazy" decoding="async" src="/74841_0ed277ac6ff8a57c3de4a41328e7ac4f.png" alt="Soal 20" /></p>
<p>A. <img loading="lazy" decoding="async" src="/38654_a75987a1cae08446c153ceb366405f4d.png" alt="Opsi A" /><br />B. <img loading="lazy" decoding="async" src="/06320_449dadc50377699747d408718b31fe02.png" alt="Opsi B" /><br />C. <img loading="lazy" decoding="async" src="/99614_8b8f72cc04b1df0a821d57ba349c2371.png" alt="Opsi C" /><br />D. <img loading="lazy" decoding="async" src="/99614_48199cd6676218038755ca45dc7fa386.png" alt="Opsi D" /><br />E. <img loading="lazy" decoding="async" src="/06320_449dadc50377699747d408718b31fe02.png" alt="Opsi E" /></p>

        </main>
    </div>
    
</body>
</html>

==================================================
File: .\public\test.html
==================================================
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Test</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; line-height: 1.6; margin: 0; color: #333; }
        .container { display: flex; min-height: 100vh; }
        .sidebar { width: 220px; min-width: 220px; border-right: 1px solid #e0e0e0; padding: 2em; background-color: #f9f9f9; }
        .sidebar h2 { font-size: 1.1em; margin-top: 0; margin-bottom: 1em; color: #555; text-transform: uppercase; letter-spacing: 0.5px; }
        .sidebar ul { list-style: none; padding: 0; margin: 0; }
        .sidebar ul ul { padding-left: 1em; border-left: 1px solid #eee; margin-left: 0.2em; margin-top: 0.5em;}
        .sidebar li { margin-bottom: 0.5em; }
        .sidebar a { color: #333; text-decoration: none; display: block; padding: 0.2em 0; border-radius: 4px; transition: background-color 0.2s, color 0.2s; }
        .sidebar a:hover { color: #007bff; }
        .sidebar a.active { font-weight: bold; color: #007bff; }
        main { flex-grow: 1; padding: 2em 3em; max-width: 800px; }
        main img { max-width: 100%; height: auto; border-radius: 4px; }
        h1, h2, h3 { line-height: 1.2; }
        pre { background: #f4f4f4; padding: 1em; border-radius: 5px; overflow-x: auto; border: 1px solid #ddd; }
        code { font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
        p { margin-bottom: 1em; }
    </style>
</head>
<body>
    <div class="container">
        <aside class="sidebar">
            <h2>Navigation</h2>
            <ul><li><a href="/index.html" class="">Home</a></li><li><a href="/test.html" class="active">Test</a></li></ul>
        </aside>
        <main>
<h1>hello</h1>

        </main>
    </div>
    
</body>
</html>

==================================================
File: .\src\dev.ts
==================================================
// src/index.ts
import * as fs from "fs";
import * as path from "path";
import * as http from "http";
import sanitizeHtml from "sanitize-html";
import imagemin from "imagemin";
import imageminGifsicle from "imagemin-gifsicle";
import imageminMozjpeg from "imagemin-mozjpeg";
import imageminPngquant from "imagemin-pngquant";
import { marked } from "marked";

const mdDir = path.join(process.cwd(), "md");
const publicDir = path.join(process.cwd(), "public");
const imageDir = publicDir;
const PORT = 3000;

let allUsedImages: Set<string>;

interface NavItem {
  name: string;
  path: string;
  children?: NavItem[];
}

const prettifyName = (name: string): string => {
  const baseName = path.basename(name, ".md");
  if (baseName === "index") return "Home";
  return baseName.replace(/-/g, " ").replace(/\b\w/g, (l) => l.toUpperCase());
};

const buildNavTree = (dir: string, webPathPrefix: string): NavItem[] => {
  const entries = fs.readdirSync(dir, { withFileTypes: true });
  const navItems: NavItem[] = [];

  const files = entries.filter((e) => e.isFile() && e.name.endsWith(".md"));
  const dirs = entries.filter((e) => e.isDirectory());

  files.sort((a, b) => {
    if (a.name === "index.md") return -1;
    if (b.name === "index.md") return 1;
    return a.name.localeCompare(b.name);
  });
  dirs.sort((a, b) => a.name.localeCompare(b.name));

  for (const file of files) {
    navItems.push({
      name: prettifyName(file.name),
      path: `${webPathPrefix}${file.name.replace(/\.md$/, ".html")}`,
    });
  }

  for (const subDir of dirs) {
    const children = buildNavTree(
      path.join(dir, subDir.name),
      `${webPathPrefix}${subDir.name}/`
    );
    if (children.length > 0) {
      const indexPage = children.find(
        (child) => path.basename(child.path) === "index.html"
      );
      navItems.push({
        name: prettifyName(subDir.name),
        path: indexPage ? indexPage.path : "#",
        children: children,
      });
    }
  }

  return navItems;
};

const generateSidebarHtml = (
  navTree: NavItem[],
  currentPagePath: string
): string => {
  let html = "<ul>";
  for (const item of navTree) {
    const isActive = item.path === currentPagePath;
    html += `<li><a href="${item.path}" class="${isActive ? "active" : ""}">${
      item.name
    }</a>`;
    if (item.children && item.children.length > 0) {
      html += generateSidebarHtml(item.children, currentPagePath);
    }
    html += "</li>";
  }
  html += "</ul>";
  return html;
};

const processMarkdownImages = async (
  markdown: string,
  withLiveReload: boolean
): Promise<string> => {
  const imageUrlRegex = /!\[(.*?)\]\((https?:\/\/.*?)\)/g;
  const matches = [...markdown.matchAll(imageUrlRegex)];
  let processedMarkdown = markdown;

  for (const match of matches) {
    const fullMatch = match[0];
    const altText = match[1];
    const remoteUrl = match[2];

    if (!remoteUrl) continue;

    try {
      const url = new URL(remoteUrl);
      const filename = path.basename(url.pathname);
      const localFilePath = path.join(imageDir, filename);

      allUsedImages.add(localFilePath);

      if (!fs.existsSync(localFilePath)) {
        console.log(`- Downloading image: ${remoteUrl}`);
        const response = await fetch(remoteUrl);
        if (!response.ok) {
          throw new Error(
            `Failed to fetch ${remoteUrl}: ${response.statusText}`
          );
        }
        const buffer = Buffer.from(await response.arrayBuffer());

        const compressedBuffer = await imagemin.buffer(buffer, {
          plugins: [
            imageminMozjpeg({ quality: 80 }),
            imageminPngquant({ quality: [0.6, 0.8] }),
            imageminGifsicle({ optimizationLevel: 2 }),
          ],
        });

        fs.writeFileSync(localFilePath, compressedBuffer);
        console.log(
          `  -> Saved to: ${path.relative(process.cwd(), localFilePath)}`
        );
      }

      const webPath = withLiveReload
        ? `http://localhost:${PORT}/${filename}`
        : `/${filename}`;
      const newImageTag = `![${altText}](${webPath})`;
      processedMarkdown = processedMarkdown.replace(fullMatch, newImageTag);
    } catch (error) {
      console.error(`Error processing image ${remoteUrl}:`, error);
    }
  }

  return processedMarkdown;
};

const renderer = new marked.Renderer();
renderer.image = ({
  href,
  title,
  text,
}: {
  href: string | null;
  title: string | null;
  text: string;
}) => {
  if (href === null) {
    return text;
  }
  let out = `<img loading="lazy" decoding="async" src="${href}" alt="${text}"`;
  if (title) {
    out += ` title="${title}"`;
  }
  out += "/>";
  return out;
};

marked.use({
  renderer,
  gfm: true,
  breaks: true,
});

const parseMarkdown = (markdown: string): string => {
  const html = marked.parse(markdown) as string;
  return sanitizeHtml(html, {
    allowedTags: sanitizeHtml.defaults.allowedTags.concat(["img"]),
    allowedAttributes: {
      ...sanitizeHtml.defaults.allowedAttributes,
      img: ["src", "alt", "title", "loading", "decoding"],
    },
  });
};

const createHtmlTemplate = (
  title: string,
  content: string,
  sidebarHtml: string,
  withLiveReload: boolean = false
): string => `<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>${title}</title>
    <style>
        body { font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif, "Apple Color Emoji", "Segoe UI Emoji", "Segoe UI Symbol"; line-height: 1.6; margin: 0; color: #333; }
        .container { display: flex; min-height: 100vh; }
        .sidebar { width: 220px; min-width: 220px; border-right: 1px solid #e0e0e0; padding: 2em; background-color: #f9f9f9; }
        .sidebar h2 { font-size: 1.1em; margin-top: 0; margin-bottom: 1em; color: #555; text-transform: uppercase; letter-spacing: 0.5px; }
        .sidebar ul { list-style: none; padding: 0; margin: 0; }
        .sidebar ul ul { padding-left: 1em; border-left: 1px solid #eee; margin-left: 0.2em; margin-top: 0.5em;}
        .sidebar li { margin-bottom: 0.5em; }
        .sidebar a { color: #333; text-decoration: none; display: block; padding: 0.2em 0; border-radius: 4px; transition: background-color 0.2s, color 0.2s; }
        .sidebar a:hover { color: #007bff; }
        .sidebar a.active { font-weight: bold; color: #007bff; }
        main { flex-grow: 1; padding: 2em 3em; max-width: 800px; }
        main img { max-width: 100%; height: auto; border-radius: 4px; }
        h1, h2, h3 { line-height: 1.2; }
        pre { background: #f4f4f4; padding: 1em; border-radius: 5px; overflow-x: auto; border: 1px solid #ddd; }
        code { font-family: "SFMono-Regular", Consolas, "Liberation Mono", Menlo, Courier, monospace; }
        a { color: #007bff; text-decoration: none; }
        a:hover { text-decoration: underline; }
        p { margin-bottom: 1em; }
    </style>
</head>
<body>
    <div class="container">
        <aside class="sidebar">
            <h2>Navigation</h2>
            ${sidebarHtml}
        </aside>
        <main>
${content}
        </main>
    </div>
    ${
      withLiveReload
        ? `
    <script>
        const evtSource = new EventSource("/__livereload__");
        evtSource.onmessage = function(event) {
            if (event.data === 'reload') {
                console.log('Reloading page...');
                window.location.reload();
            }
        };
        evtSource.onerror = function() {
            console.log("Live reload connection error. Retrying...");
        };
    </script>
    `
        : ""
    }
</body>
</html>`;

const cleanupOrphanedImages = () => {
  console.log("Cleaning up orphaned images...");
  if (!fs.existsSync(imageDir)) return;

  const imageExtensions = [".png", ".jpg", ".jpeg", ".gif", ".svg", ".webp"];
  const filesInDir = fs.readdirSync(imageDir);

  for (const file of filesInDir) {
    const fullPath = path.join(imageDir, file);
    if (imageExtensions.includes(path.extname(file).toLowerCase())) {
      if (!allUsedImages.has(fullPath)) {
        console.log(
          `- Deleting orphaned image: ${path.relative(process.cwd(), fullPath)}`
        );
        fs.unlinkSync(fullPath);
      }
    }
  }
  console.log("Cleanup complete.");
};

const compile = async (withLiveReload: boolean = false) => {
  console.log("Building static pages...");
  allUsedImages = new Set<string>();

  if (!fs.existsSync(mdDir)) {
    console.log(
      "-> No 'md' directory found. Creating one with an example file."
    );
    fs.mkdirSync(mdDir, { recursive: true });
    fs.writeFileSync(
      path.join(mdDir, "index.md"),
      "# Hello World\n\nThis is your first page.\n\nEdit `md/index.md` to see changes."
    );
  }

  if (fs.existsSync(publicDir) && !withLiveReload) {
    fs.rmSync(publicDir, { recursive: true, force: true });
  }
  fs.mkdirSync(publicDir, { recursive: true });

  const navTree = buildNavTree(mdDir, "/");

  const processFiles = async (
    dir: string,
    outBaseDir: string,
    webPathPrefix: string
  ) => {
    const entries = fs.readdirSync(dir, { withFileTypes: true });
    for (const entry of entries) {
      const fullPath = path.join(dir, entry.name);
      if (entry.isDirectory()) {
        const newOutDir = path.join(outBaseDir, entry.name);
        fs.mkdirSync(newOutDir, { recursive: true });
        await processFiles(
          fullPath,
          newOutDir,
          `${webPathPrefix}${entry.name}/`
        );
      } else if (entry.isFile() && entry.name.endsWith(".md")) {
        let markdownContent = fs.readFileSync(fullPath, "utf-8");
        markdownContent = await processMarkdownImages(
          markdownContent,
          withLiveReload
        );

        const htmlContent = parseMarkdown(markdownContent);
        const title = prettifyName(entry.name);

        const outFileName = entry.name.replace(/\.md$/, ".html");
        const currentPagePath = `${webPathPrefix}${outFileName}`;

        const sidebarHtml = generateSidebarHtml(navTree, currentPagePath);
        const finalHtml = createHtmlTemplate(
          title,
          htmlContent,
          sidebarHtml,
          withLiveReload
        );

        const outFilePath = path.join(outBaseDir, outFileName);
        fs.writeFileSync(outFilePath, finalHtml);
        console.log(
          `- Generated: ${path.relative(process.cwd(), outFilePath)}`
        );
      }
    }
  };

  await processFiles(mdDir, publicDir, "/");
  cleanupOrphanedImages();
  console.log("Build complete!");
};

let liveReloadClients: http.ServerResponse[] = [];

const triggerReload = () => {
  for (const res of liveReloadClients) {
    if (!res.writableEnded) {
      res.write("data: reload\n\n");
    }
  }
};

const debounce = <F extends (...args: any[]) => any>(
  func: F,
  waitFor: number
) => {
  let timeout: NodeJS.Timeout;
  return (...args: Parameters<F>): Promise<ReturnType<F>> =>
    new Promise((resolve) => {
      clearTimeout(timeout);
      timeout = setTimeout(() => resolve(func(...args)), waitFor);
    });
};

const handleRebuild = debounce(async () => {
  console.log("\nChanges detected, rebuilding...");
  try {
    await compile(true);
    triggerReload();
  } catch (error) {
    console.error("Build failed:", error);
  }
}, 100);

const startDevServer = () => {
  const server = http.createServer((req, res) => {
    const url = req.url || "/";
    if (url === "/__livereload__") {
      res.writeHead(200, {
        "Content-Type": "text/event-stream",
        "Cache-Control": "no-cache",
        Connection: "keep-alive",
      });
      liveReloadClients.push(res);
      req.on("close", () => {
        liveReloadClients = liveReloadClients.filter(
          (client) => client !== res
        );
      });
      return;
    }

    let filePath = path.join(publicDir, url);
    if (fs.existsSync(filePath) && fs.statSync(filePath).isDirectory()) {
      filePath = path.join(filePath, "index.html");
    }

    const ext = path.extname(filePath);
    const contentTypes: { [key: string]: string } = {
      ".html": "text/html",
      ".css": "text/css",
      ".js": "application/javascript",
      ".png": "image/png",
      ".jpg": "image/jpeg",
      ".jpeg": "image/jpeg",
      ".gif": "image/gif",
      ".svg": "image/svg+xml",
      ".webp": "image/webp",
    };
    const contentType = contentTypes[ext] || "application/octet-stream";

    fs.readFile(filePath, (err, content) => {
      if (err) {
        res.writeHead(404, { "Content-Type": "text/plain" });
        res.end("404 Not Found");
      } else {
        res.writeHead(200, { "Content-Type": contentType });
        res.end(content);
      }
    });
  });

  server
    .listen(PORT, () => {
      console.log(`\nDevelopment server running at http://localhost:${PORT}`);
      console.log("Watching for changes in ./md...");
    })
    .on("error", (err: NodeJS.ErrnoException) => {
      if (err.code === "EADDRINUSE") {
        console.error(`Error: Port ${PORT} is already in use.`);
        process.exit(1);
      } else {
        console.error(err);
      }
    });
};

const watchFiles = () => {
  if (!fs.existsSync(mdDir)) return;
  fs.watch(mdDir, { recursive: true }, (eventType, filename) => {
    if (filename) {
      handleRebuild();
    }
  });
};

const runDev = async () => {
  await compile(true);
  startDevServer();
  watchFiles();
};

const runBuild = async () => {
  await compile(false);
};

const main = () => {
  const command = process.argv[2];

  if (command === "dev") {
    runDev().catch((err) => {
      console.error(err);
      process.exit(1);
    });
  } else if (command === "build") {
    runBuild().catch((err) => {
      console.error(err);
      process.exit(1);
    });
  } else {
    console.log("Usage:");
    console.log("  npm run dev    - Start dev server with live reload");
    console.log("  npm run build  - Build static pages for production");
  }
};

main();



==================================================
File: .\src\prod.ts
==================================================
// src/index.ts
import express from 'express';
import path from 'path';
import compression from 'compression';
import helmet from 'helmet';
import { fileURLToPath } from 'url';

const __filename = fileURLToPath(import.meta.url);
const __dirname = path.dirname(__filename);
const app = express();
const port = process.env.PORT || 3000;
const publicDirectoryPath = path.join(__dirname, '..', 'public');
const oneYearInSeconds = 31536000;

app.use(helmet({
    contentSecurityPolicy: {
        directives: {
            ...helmet.contentSecurityPolicy.getDefaultDirectives(),
            "script-src": ["'self'"],
            "img-src": ["'self'", "data:"],
        },
    },
}));

app.use(compression());

app.use(express.static(publicDirectoryPath, {
    maxAge: `${oneYearInSeconds}s`,
    immutable: true,
    setHeaders: (res, filePath) => {
        const fileExtension = path.extname(filePath);
        if (fileExtension === '.html') {
            res.setHeader('Cache-Control', 'public, max-age=0, must-revalidate');
        }
    },
}));

app.listen(port, () => {
    console.log(`Server is running on http://localhost:${port}`);
});

==================================================
File: .\tsconfig.json
==================================================
{
  // Visit https://aka.ms/tsconfig to read more about this file
  "compilerOptions": {
    // File Layout
    // "rootDir": "./src",
    // "outDir": "./dist",

    // Environment Settings
    // See also https://aka.ms/tsconfig/module
    "module": "nodenext",
    "target": "esnext",
    "types": ["node"],

    // For nodejs:
    // "lib": ["esnext"],
    // "types": ["node"],
    // and npm install -D @types/node

    // Other Outputs
    "sourceMap": true,
    "declaration": true,
    "declarationMap": true,

    // Stricter Typechecking Options
    "noUncheckedIndexedAccess": true,
    "exactOptionalPropertyTypes": true,

    // Style Options
    // "noImplicitReturns": true,
    // "noImplicitOverride": true,
    // "noUnusedLocals": true,
    // "noUnusedParameters": true,
    // "noFallthroughCasesInSwitch": true,
    // "noPropertyAccessFromIndexSignature": true,

    // Recommended Options
    "strict": true,
    "jsx": "react-jsx",
    "verbatimModuleSyntax": true,
    "isolatedModules": true,
    "noUncheckedSideEffectImports": true,
    "moduleDetection": "force",
    "skipLibCheck": true,
    "outDir": "./dist",
    "rootDir": "./src"
  },
  "include": ["src/**/*.ts"],
}

